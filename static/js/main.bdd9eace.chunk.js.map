{"version":3,"sources":["Components/card.js","Components/card-info.js","App.js","index.js"],"names":["PaymentForm","props","state","cvc","expiry","focus","name","number","id","this","focused","cardNumber","React","Component","CardInfo","handleInputFocus","event","setState","target","handleRetry","results","numberError","nameError","cvcError","expiryError","validateNumber","match","length","validateName","validateCVC","validateExpiry","year","Date","getFullYear","Number","slice","handleNumberChange","bind","checkCardNumber","handleNameChange","handleCvcChange","handleExpiryChange","value","card","cardToArr","split","join","map","item","parseInt","i","reduce","acc","cur","Swal","fire","title","icon","className","type","required","onChange","onFocus","onBlur","placeholder","disabled","onClick","App","href","rel","faLinkedin","size","faGithub","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdd9eace.chunk.js","sourcesContent":["import React from 'react';\nimport Cards from 'react-credit-cards';\nimport 'react-credit-cards/es/styles-compiled.css';\n \nexport default class PaymentForm extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        cvc: '',\n        expiry: '',\n        focus: '',\n        name: '',\n        number: '',\n      }\n  }\n  \n  render() {\n    return (\n      <div id=\"PaymentForm\">\n        <Cards\n          cvc={this.props.cvc}\n          expiry={this.props.expiry}\n          focused={this.props.focus}\n          name={this.props.name}\n          number={this.props.cardNumber}\n        />\n      </div>\n    );\n  }\n};","import React from 'react';\nimport Swal from 'sweetalert2';\nimport PaymentForm from './card';\nimport './card-info.css';\n\nclass CardInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cardNumber: '',\n            name: '',\n            cvc: '',\n            expiry: '',\n            results: '',\n            numberError: '',\n            nameError: '',\n            cvcError: '',\n            expiryError: '',\n            focus: ''\n        }\n           \n        this.handleNumberChange = this.handleNumberChange.bind(this);\n        this.checkCardNumber = this.checkCardNumber.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleCvcChange = this.handleCvcChange.bind(this);\n        this.handleExpiryChange = this.handleExpiryChange.bind(this);\n        this.handleInputFocus = this.handleInputFocus.bind(this);\n        this.handleRetry = this.handleRetry.bind(this);\n    }\n    \n    handleInputFocus = (event) => {\n        this.setState({ focus: event.target.name });\n    }\n\n    handleNumberChange(event) {\n        this.setState({ cardNumber: event.target.value })\n    }\n\n    handleNameChange(event) {\n        this.setState({ name: event.target.value })\n    }\n\n    handleCvcChange(event) {\n        this.setState({ cvc: event.target.value })\n    }\n\n    handleExpiryChange(event) {\n        this.setState({ expiry: event.target.value })\n    }\n\n    handleRetry = () => {\n        this.setState  ({\n            cardNumber: '',\n            name: '',\n            cvc: '',\n            expiry: '',\n            results: '',\n            numberError: '',\n            nameError: '',\n            cvcError: '',\n            expiryError: '',\n            focus: ''\n        })\n    }\n\n    checkCardNumber() {\n        let card = this.state.cardNumber;\n        card = card.split('').join(', ');\n        const cardToArr = card.split(',').map(function(item) {\n            return parseInt(item, 10);\n        })\n\n        cardToArr.slice();\n        for (let i = (cardToArr.length - 2); i >= 0; i = i -2) {\n            cardToArr[i] = cardToArr[i] * 2;\n            if (cardToArr[i] > 9) {\n                cardToArr[i] = cardToArr[i] -9;\n            }\n        }\n        let arraySum = cardToArr.reduce((acc, cur) => acc + cur);\n        if (arraySum % 10 === 0) {\n            this.setState({results: 'This card is valid'});\n            Swal.fire({\n                title: 'This card is valid',\n                icon: 'success'\n            });\n        } else {\n            this.setState({results: 'This card is not valid'});\n            Swal.fire({\n                title: 'This card is not valid',\n                icon: 'error'\n            });\n        }\n    }\n\n    validateNumber = () => {\n        const { cardNumber } = this.state;\n        let num = /^[0-9]+$/;\n        if(cardNumber.match(num)) {\n            this.setState({\n                numberError:\n                    cardNumber.length < 12 ? '*Card Number should be between 12-19 digits' : null\n            });\n        } else {\n            this.setState({\n                numberError: '*Only numeric values allowed'\n            });\n        }\n\n    }\n    \n    validateName = () => {\n        const { name } = this.state;\n        let alpha = /^[a-zA-Z\\s]+$/;\n        if(name.match(alpha)){\n            this.setState({\n            nameError:\n                name.length < 1 ? '*Name field can\\'t be empty' : null\n        });\n        }\n        else{\n        this.setState({\n            nameError: '*Not a valid name'\n       });\n      }\n    }\n\n    validateCVC = () => {\n        const { cvc } = this.state;\n        let num = /^[0-9]+$/;\n        if(cvc.match(num)){\n            this.setState({\n                cvcError:\n                    cvc.length < 3 || cvc.length > 4 ? '*CVC should be of 3-4 digits' : null\n        });\n\n        }\n        else{\n        this.setState({\n            cvcError: '*Only numeric values are allowed'\n       });\n      }\n    }\n\n    validateExpiry = () => {\n        const { expiry } = this.state;\n        let date = new Date();\n        let year = date.getFullYear();\n        let number = /^[0-9]+$/;\n        if (expiry.match(number)) {\n            this.setState ({ \n                expiryError:\n                    expiry.length !== 4 ? '*Specified format \"MMYY\" is not satisfied' : Number(expiry.slice(0,2)) > 12 || Number('20' + expiry.slice(2,4)) < year ? 'Invalid Date' : null \n            });\n        } else {\n            this.setState({\n                expiryError: '*Only numeric values allowed'\n            });\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"validator-container\">\n                <p className='result-info'>{this.state.results}</p>\n\n                <form>\n                    <input \n                        name=\"Name\"\n                        type=\"text\"\n                        className= {`form-control ${this.state.nameError ? 'is-invalid' : ''}`}\n                        required\n                        value={this.state.name}\n                        onChange={this.handleNameChange}\n                        onFocus={this.handleInputFocus}\n                        onBlur={this.validateName}\n                        placeholder=\"Full Name\" \n                    />\n                    <div className='invalid-feedback error-msg'>{this.state.nameError}</div>\n\n                    <input\n                        name=\"Number\"\n                        type=\"tel\"\n                        className={`form-control ${this.state.numberError ? 'is-invalid' : ''}`}\n                        required\n                        value={this.state.cardNumber}\n                        onChange={this.handleNumberChange}\n                        onFocus={this.handleInputFocus}\n                        onBlur={this.validateNumber}\n                        placeholder=\"Please enter card number\" \n                    />\n                    <div className='invalid-feedback error-msg'>{this.state.numberError}</div>\n\n                    <input\n                        type=\"tel\"\n                        name=\"cvc\"\n                        className= {`form-control ${this.state.cvcError ? 'is-invalid' : ''}`}\n                        required\n                        value={this.state.cvc}\n                        onChange={this.handleCvcChange}\n                        onFocus={this.handleInputFocus}\n                        onBlur={this.validateCVC}\n                        placeholder=\"CVC Code\" \n                    />\n                    <div className='invalid-feedback error-msg'>{this.state.cvcError}</div>\n\n                    <input\n                        type=\"tel\"\n                        name=\"expiry\"\n                        className={`form-control ${this.state.expiryError ? 'is-invalid' : ''}`}\n                        required\n                        value={this.state.expiry}\n                        onChange={this.handleExpiryChange}\n                        onFocus={this.handleInputFocus}\n                        onBlur={this.validateExpiry}\n                        placeholder=\"Expiration mmyy\" \n                    />\n                    <div className='invalid-feedback error-msg'>{this.state.expiryError}</div>\n                </form>\n                \n                <div className='button-container'>\n                    <button type=\"submit\" className='button' disabled={!this.state.cardNumber || !this.state.name || !this.state.cvc || !this.state.expiry} onClick={this.checkCardNumber}>Validate</button>\n                    <button type=\"submit\" className='button' onClick={this.handleRetry} >Reset</button>\n                </div>\n\n                <div>\n                    <PaymentForm\n                    cardNumber={this.state.cardNumber}\n                    name={this.state.name}\n                    cvc={this.state.cvc}\n                    expiry={this.state.expiry}\n                    focus={this.state.focus} />\n                </div>\n                \n            </div>\n\n            \n        )\n    }\n}\n\nexport default CardInfo;","import React from 'react';\nimport './App.css';\nimport CardInfo from './Components/card-info';\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\n//Dont forget to use the Google fonts poppins and work sans\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"body-container\">\n\n        <div className=\"app-container\">\n          <div className=\"title-container\">\n            <h1>Credit Card Validator</h1>\n          </div>\n\n          <div className=\"card-info-container\">\n            <CardInfo />\n          </div>\n\n          <div className=\"app-footer-container\">\n            <p>*Please note this site does not store any credit card information*</p>\n          </div>\n        </div>\n\n        <div className=\"footer\">\n          <a href=\"https://www.linkedin.com/in/mark-novak-56679949/\" className=\"linkedin social\" rel=\"noopener noreferrer\" target=\"_blank\">\n                <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\n          </a>\n          <a href=\"https://manovak24.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\">\n            <p>Mark Novak</p>\n          </a>\n          \n          <a href=\"https://github.com/manovak24\" className=\"github social\" rel=\"noopener noreferrer\" target=\"_blank\">\n                <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n          </a>\n          \n        </div>\n\n      </div>\n      \n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}